#:kivy 1.0.9
#: import TextInput kivy.uix.textinput
#: import ListAdapter kivy.adapters.listadapter.ListAdapter
#: import ListItemButton kivy.uix.listview.ListItemButton
#: import ListItemLabel kivy.uix.listview.ListItemLabel
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import WipeTransition kivy.uix.screenmanager.WipeTransition
#: import DictAdapter kivy.adapters.dictadapter.DictAdapter
#: import CompositeListItem kivy.uix.listview.CompositeListItem
#: import JsonStore kivy.storage.jsonstore

ScreenManagement:
	transition: WipeTransition()
	TriggeredCapture:
	TrackingLog:

<ListItemButton>:
	selected_color: .5,.5,.5,1
	deselected_color: .3,.3,.3,1


<TriggeredCapture>:
	name: 'triggered'

	BoxLayout:
		size: root.size
		padding: 10
		spacing: 25

		BoxLayout:
			size_hint: 0.3,1
			orientation: 'vertical'
			spacing:30

			GridLayout:
				cols: 2
				spacing: 8
									
				ToggleButton:
					id: goose
					text: "Goose"
					group: "g1"
					on_press:root.protocol1()

				ToggleButton:
					id: mms
					text: "MMS"
					group: "g1"
					on_press:root.protocol2()

				ToggleButton:
					id: sv
					text:"SV"
					group: "g1"
					on_press:root.protocol3()
				ToggleButton:
					id: ts
					text:"TS"
					group: "g1"
					on_press:root.protocol4()
			BoxLayout:
				orientation: 'vertical'
				spacing: 5
				size_hint_y: .5
				TextInput: 
					id: amount
					hint_text: "Number of packages"
					multiline: False
			BoxLayout:
				orientation:'vertical'
				spacing: 10

				Button:
					id: start
					text:"Start"
					on_release: root.start()
				Button:
					id: stop
					text:"Stop capture"
					on_release: root.stop()

		BoxLayout:
			orientation: 'vertical'
			spacing: 3
			BoxLayout:
				size_hint_y: .1
				tab_width: 20
				Label:
					text: "PiShark 0.1.9"


				Button:
					id: track
					text: 'Tracking log'
					on_release: app.root.current = 'tracking'

			BoxLayout:
				size_hint_y: .1
				Label:
					size_hint_x: .2
					text: 'Src'
				TextInput:
					id: src
					multiline: False

				Label:
					size_hint_x: .2
					text: 'Dst'
				TextInput:
					id: dst
					multiline: False

				Button:
					id:close
					text: 'Close app'
					on_press: app.stop()

			BoxLayout:
				size_hint_y:.05
				Label:
					size_hint_x: .4
					text: 'No.'
				Label:
					size_hint_x: 1.
					text: 'Protocol'
				Label:
					size_hint_x: 1.5
					text: 'Src IP'
				Label:
					size_hint_x: 1.5
					text: 'Dst IP'
				Label:
					text: 'TTL'
				Label:
					text: 'Src port'
				Label:
					text: 'Dst port'

			BoxLayout:
				ListView:
					size_hint_x: .4
					do_scroll_y: False
					adapter:
						ListAdapter(data=root.my_data1,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					size_hint_x: 1.
					adapter:
						ListAdapter(data=root.my_data2,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					size_hint_x: 1.5
					adapter:
						ListAdapter(data=root.my_data3,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					size_hint_x: 1.5
					adapter:
						ListAdapter(data=root.my_data4,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					adapter:
						ListAdapter(data=root.my_data5,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					adapter:
						ListAdapter(data=root.my_data6,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size
				ListView:
					adapter:
						ListAdapter(data=root.my_data7,
						selection_mode='single',
						allow_empty_selection=False,
						cls=ListItemButton)
					canvas.before:
						Color:
							rgb: .5,.5,.5
						Rectangle:
							pos: self.pos
							size: self.size

			Label:
				id: noti
				size_hint_y: .1
				canvas.before:
					Color:
						rgb: .5,.5,5
					Rectangle:
						pos: self.pos
						size: self.size


<TrackingLog>:
	name: 'tracking'
	BoxLayout:
		size:root.size
		orientation: 'vertical'
		spacing:30
		BoxLayout:
			size_hint_y:.1
			Button:
				text: 'Triggered Capture'
				on_release: app.root.current = 'triggered'
			Button:
				text: 'Read'
				on_release: list_view_id.adapter = DictAdapter(data =root.readJson(),sorted_keys =["{0}".format(index) for index in range(100)],args_converter = lambda row_index,rec:{'text': rec['nro'],'size_hint_y': None,'height': 25,'cls_dicts':[{'cls': ListItemButton,'kwargs':{'text':rec['nro']}},{'cls': ListItemButton,'kwargs':{'text':rec['protocol']}},{'cls': ListItemButton,'kwargs':{'text':rec['dst']}},{'cls': ListItemButton,'kwargs':{'text':rec['src']}},{'cls': ListItemButton,'kwargs':{'text':rec['ttl']}},{'cls':ListItemButton,'kwargs':{'text':rec['dstPort']}},{'cls': ListItemButton,'kwargs':{'text':rec['srcPort']}}]},cls = CompositeListItem)
		BoxLayout:
			size_hint_y:.01
			Label:
				
				text: 'No.'
			Label:
				text: 'Protocol'
			Label:
				text: 'Src IP'
			Label:
				text: 'Dst IP'
			Label:
				text: 'TTL'
			Label:
				text: 'Src port'
			Label:
				text: 'Dst port'

		BoxLayout:
			ListView:
				id: list_view_id
				adapter:
					DictAdapter(
					sorted_keys =["{0}".format(index) for index in range(100)],
					data=root.readJson(),
					args_converter = lambda row_index,
					rec:{'text': rec['dst'],
					'size_hint_y': None,
					'height': 25,
					'cls_dicts':[{'cls': ListItemButton,
					'kwargs':{'text':rec['dst']}},
					{'cls': ListItemButton,
					'kwargs':{'text':rec['src']}},
					{'cls':ListItemButton,
					'kwargs':{'text':rec['ttl']}}]},
					selection_mode='single',
					allow_empty_selection = False,
					cls = CompositeListItem)


